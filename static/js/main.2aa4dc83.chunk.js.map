{"version":3,"sources":["fixture/dragonJsonTypes.js","components/common/Button.jsx","components/common/SearchBar.jsx","fixture/getInfoFuncs.js","store/action/apiKey.js","components/common/SummonerSearchBar.jsx","components/common/TextLink.jsx","views/Main/Main.jsx","components/MatchList/GameInfo.jsx","components/common/ImgComponent.jsx","components/MatchList/Champ/ChampRune.jsx","components/MatchList/Champ/ChampSpell.jsx","components/MatchList/Champ/ChampPortrait.jsx","components/MatchList/Champ/ChampScoreBox.jsx","components/MatchList/Champ/ChampInfo.jsx","components/MatchList/Champ/ChampTeam.jsx","components/MatchList/Item/Item.jsx","fixture/fixedData.js","components/MatchList/Item/ItemBox.jsx","components/MatchList/InfoBox.jsx","components/common/ComponentLoading.jsx","components/MatchList/InfoBoxList.jsx","components/MatchList/Profile.jsx","components/MatchList/Rank.jsx","views/MatchList/MatchList.jsx","components/TimeLine/ItemBoard.jsx","components/TimeLine/MapBoard.jsx","components/TimeLine/BoardLine.jsx","components/TimeLine/Board.jsx","components/TimeLine/ProgressBar.jsx","components/TimeLine/ControllerButton.jsx","components/TimeLine/PlayerController.jsx","views/common/Loading.jsx","views/TimeLine/TimeLine.jsx","views/error/Error.jsx","Routes.jsx","views/ApiKey/ApiKey.jsx","App.jsx","store/action/json.js","reportWebVitals.js","store/reducer/json.js","store/reducer/apiKey.js","store/reducer/index.js","store/index.js","index.jsx"],"names":["dragonJsonTypes","Button","label","onClick","className","SearchBar","useState","inputValue","changeInputValue","onClickButton","onChange","e","target","value","onKeyPress","key","wait","time","alert","Promise","resolve","reject","setTimeout","requestWithRiotToken","url","token","a","test","console","log","fetch","method","headers","res","status","ok","json","getLeagueInfo","id","getsummonerInfo","name","getTimeLine","matchId","getMatchDto","getmatchList","beginIndex","accountId","gettingListNum","endIndex","setApiKey","apiKey","type","payload","SummonerSearchBar","useSelector","dispatch","useDispatch","history","useHistory","moveMatchListView","push","localStorage","removeItem","styled","button","props","fontSize","TextLink","style","cursor","Main","GameInfo","queueId","gameCreation","gameDuration","calcDuration","useCallback","duration","parseInt","calcTerm","crationTime","term","Date","now","sec","min","hour","day","colors","useRef","Remake","color","Victory","Defeat","findGameType","output","queueType","find","description","slice","length","border","width","margin","current","ImgComponent","src","alt","borderColor","findSrc","runeJson","runeNum","icon","slots","inner","runes","ChampRune","state","runesReforged","imgSrc","setImgSrc","useEffect","ChampSpell","spellNum","spellJson","summoner","data","Object","hasOwnProperty","call","String","ChampPortrait","championId","champLevel","right","top","champJson","champion","Number","image","full","findSource","ChampScoreBox","kills","deaths","assists","goldEarned","killRatio","prototype","PropTypes","number","isRequired","totalKill","ChampInfo","firstSpellNum","secondSpellNum","firstRuneNum","secondRuneNum","ChampTeam","teamInfo","map","index","summonerName","blankSrc","Item","itemNum","itemJson","item","itemInfo","makeImgAttribute","trinketList","BuildingPosition11","frame","blue","NEXUS_TURRET","1","2","3","TOP_LANE","OUTER_TURRET","INNER_TURRET","BASE_TURRET","UNDEFINED_TURRET","MID_LANE","BOT_LANE","red","x","y","BuildingPosition12","ItemBox","itemArray","grid","items","setItems","componentArr","hasTrinket","i","includes","makeItemBox","idx","initChmpInfo","InfoBox","gameId","participantIdentities","participants","useParams","blueTeam","setBlueTeam","redTeam","setRedTeam","itemBox","setItemBox","champInfo","setChampInfo","gameStatus","setGameStatus","backgroundColors","backgroundColor","identities","myTeam","amIWin","blueKill","redKill","forEach","participantId","teamId","spell1Id","spell2Id","stats","win","item0","item1","item2","item3","item4","item5","item6","perk0","perkSubStyle","player","toLowerCase","makeTeam","champ","old","Loading","ShowMoreButton","canGetMoreData","InfoBoxList","account","matchesArr","setMatchesArr","setCanGetMoreData","isLoading","setIsLoading","addMatchList","matchListData","matches","totalGames","promises","all","matchInfos","oldInfo","error","gameInfo","Profile","loading","profileIconId","summonerLevel","emblemUrl","Rank","tier","rank","leaguePoints","wins","losses","RankBox","MatchList","setAccount","iconId","setIconId","level","setLevel","setLoading","soloLeagueInfo","setSoloLeagueInfo","flexLeagueInfo","setFlexLeagueInfo","league","leagueInfo","assign","getJsonDatas","soleItemList","ItemRow","participantChamps","TeamBoard","itemStatus","teamColor","startIdx","rows","ItemBoard","itemLogs","curTime","Array","from","fill","setItemStatus","soleItems","initItemStatus","initSoleItems","ITEM_DESTROYED","soleIdx","findIndex","val","vacancyIndex","ITEM_SOLD","ITEM_PURCHASED","FINAL","drawBuildings","ratio","buildingPosition","arr","keys","drawBuilding","building","lane","MapBoard","mapId","moveFrame","accDestBuild","ref","positions","setPositions","buildings","JSON","parse","stringify","setRatio","offsetWidth","curkey","oldVal","buildKey","laneType","towerType","team","minsec","timestamp","Math","floor","champImage","eliteMonsterImage","monsterType","monsterSubType","turretImgage","buildingType","BoardLine","event","killerId","victimId","Board","eventLogs","end","scrollIntoView","eventLine","showBoadLine","ProgressBar","totalTime","loadingTime","curTimeController","setIsRunning","isHover","setIsHover","isClicked","setIsClicked","progressRate","setProgressRate","loadingRate","setLoadingRate","hoverRate","setHoverRate","bar","calcCurRate","curX","clientX","barInfo","getBoundingClientRect","parentWidth","curWidth","left","windowMouseMove","curRate","round","onMouseEnter","onMouseLeave","onMouseMove","mouseHoverMove","onMouseDown","prevRunningState","prevState","window","addEventListener","removeEventListener","once","height","transform","ControllerButton","controllerState","onClickControllerButton","xmlns","viewBox","d","PlayerController","setCurTime","setControllerState","delay","setDelay","isRunning","callback","savedCallback","setInterval","clearInterval","useInterval","prevTime","nextTime","makeLogTime","logs","initArr","addMoveLog","moveLogs","position","addItemLog","itemId","addEventLog","makeLogs","frames","endTime","accDestroyedBuilding","last","0","dragonList","events","participantFrames","extractEvents","TimeLine","setEndTime","setMoveLogs","setItemLogs","setEventLogs","setParticipantChamps","setMap","timeLine","matchDto","move","goBack","NotFound","text","Routes","exact","path","component","render","ApiKey","setKey","registKey","setItem","getItem","href","onKeyDown","App","dragonJson","hasJson","setHasJson","hasKey","setHasKey","result","Error","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initJson","init","rootReducer","combineReducers","action","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2aa4dc83.chunk.js","sourcesContent":["const dragonJsonTypes = ['summoner', 'item', 'champion', 'runesReforged'];\n\nexport default dragonJsonTypes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Button.scss';\n\nexport default function Button({ label = 'click', onClick = () => {} }) {\n  return (\n    <button className=\"btn\" onClick={onClick}>\n      {label}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  label: PropTypes.string,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from './Button';\n\nimport './SearchBar.scss';\n\nexport default function SearchBar({ onClick = () => {} }) {\n  const initInputValue = '';\n  const [inputValue, changeInputValue] = useState(initInputValue);\n  function onClickButton() {\n    onClick(inputValue);\n    changeInputValue(initInputValue);\n  }\n  return (\n    <div className=\"search-bar\">\n      <input\n        className=\"search-bar--input\"\n        onChange={(e) => changeInputValue(e.target.value)}\n        onKeyPress={(e) => {\n          e.key === 'Enter' && onClickButton();\n        }}\n        value={inputValue}\n      />\n      <Button label=\"search\" onClick={onClickButton} />\n    </div>\n  );\n}\n\nSearchBar.propTypes = {\n  onClick: PropTypes.func,\n};\n","function wait(time) {\n  alert(\n    `if it has too many requests in a short time, it will wait 2 min to request.`,\n  );\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve();\n    }, time);\n  });\n}\n\nasync function requestWithRiotToken(url, token, isRetry = false) {\n  try {\n    const reg = /^[A-Za-z0-9-+]{42}$/;\n    if (!reg.test(token)) {\n      throw 403;\n    }\n    url = `https://kr.api.riotgames.com${url}`;\n    console.log(url, 'request url');\n    const res = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Accept-Charset': 'application/x-www-form-urlencoded; charset=UTF-8',\n        'X-Riot-Token': token,\n      },\n    });\n\n    if (res.status === 429) {\n      await wait(2 * 60 * 1000);\n      return requestWithRiotToken(url, token, true);\n    }\n    if (!res.ok) {\n      throw res.status;\n    }\n    return res.json();\n  } catch (err) {\n    throw err;\n  }\n}\n\nexport async function getLeagueInfo(id, token) {\n  try {\n    const url = `/lol/league/v4/entries/by-summoner/${id}`;\n    const res = await requestWithRiotToken(url, token);\n    return res;\n  } catch (err) {\n    throw err;\n  }\n}\n\nexport async function getsummonerInfo(name, token) {\n  try {\n    const url = `/lol/summoner/v4/summoners/by-name/${name}`;\n    const res = await requestWithRiotToken(url, token);\n    return res;\n  } catch (err) {\n    throw err;\n  }\n}\n\nexport async function getTimeLine(matchId, token) {\n  try {\n    const url = `/lol/match/v4/timelines/by-match/${matchId}`;\n    const res = await requestWithRiotToken(url, token);\n    return res;\n  } catch (err) {\n    throw err;\n  }\n}\n\nexport async function getMatchDto(matchId, token) {\n  try {\n    const url = `/lol/match/v4/matches/${matchId}`;\n    const res = await requestWithRiotToken(url, token);\n    return res;\n  } catch (err) {\n    throw err;\n  }\n}\n\nexport async function getmatchList(\n  beginIndex,\n  accountId,\n  gettingListNum,\n  token,\n) {\n  try {\n    const endIndex = beginIndex + gettingListNum;\n    let url = `/lol/match/v4/matchlists/by-account/${accountId}?beginIndex=${beginIndex}&endIndex=${endIndex}`;\n    const res = await requestWithRiotToken(url, token);\n    return res;\n  } catch (err) {\n    throw err;\n  }\n}\n","export function setApiKey(apiKey) {\n  return {\n    type: `setApiKey`,\n    payload: apiKey,\n  };\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport SearchBar from './SearchBar';\nimport { getsummonerInfo } from 'fixture/getInfoFuncs.js';\nimport { setApiKey } from 'store/action/apiKey.js';\n\nexport default function SummonerSearchBar() {\n  const apiKey = useSelector(({ apiKey: { key } }) => {\n    return key;\n  });\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n\n  function moveMatchListView(name) {\n    history.push('/match-list/' + name);\n  }\n  async function searchsummoner(name) {\n    if (name === '') {\n      alert(\"Empty text can't be submitted!\");\n      return;\n    }\n    try {\n      await getsummonerInfo(name, apiKey);\n      moveMatchListView(name);\n    } catch (err) {\n      if (err === 403) {\n        alert('The api key is Wrong or Expired');\n        localStorage.removeItem('lol-token');\n        dispatch(setApiKey(''));\n      } else if (err === 404) {\n        alert('can not find the summoner');\n      }\n    }\n  }\n\n  return <SearchBar onClick={searchsummoner} />;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport './TextLink.scss';\n\nconst Button = styled.button`\n  font-size: ${(props) => props.fontSize || 'inherit'};\n`;\n\nexport default function TextLink({ label, url, fontSize }) {\n  const history = useHistory();\n\n  function handleClick() {\n    if (url) {\n      history.push(url);\n    }\n  }\n\n  return (\n    <Button\n      className=\"text-link\"\n      type=\"button\"\n      onClick={handleClick}\n      fontSize={fontSize}\n      style={{\n        cursor: url ? 'pointer' : 'default',\n      }}\n    >\n      {label}\n    </Button>\n  );\n}\n\nTextLink.propTypes = {\n  label: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport SummonerSearchBar from 'components/common/SummonerSearchBar';\nimport TextLink from 'components/common/TextLink';\n\nimport './Main.scss';\n\nexport default function Main() {\n  return (\n    <section className=\"main\">\n      <TextLink label=\"LoLSimpleViewer\" url=\"/\" fontSize=\"5rem\" />\n      <SummonerSearchBar />\n    </section>\n  );\n}\n","import React, { useRef, useCallback } from 'react';\n\nimport queueType from 'assets/json/queueType.json';\nimport './GameInfo.scss';\n\nexport default function GameInfo({\n  queueId,\n  gameCreation,\n  gameDuration,\n  status,\n}) {\n  const calcDuration = useCallback((duration) => {\n    return `${parseInt(duration / 60)}m ${parseInt(duration % 60)}`;\n  });\n\n  const calcTerm = useCallback((crationTime) => {\n    const term = Date.now() - crationTime;\n    const sec = parseInt(term / 1000);\n    if (sec < 60) {\n      return `${sec}초 전`;\n    }\n    const min = parseInt(term / 1000 / 60);\n    if (min < 60) {\n      return `${min}분 전`;\n    }\n    const hour = parseInt(term / 1000 / 60 / 60);\n    if (hour < 24) {\n      return `${hour}시간 전`;\n    }\n    const day = parseInt(term / 1000 / 60 / 60 / 24);\n    return `${day}일 전`;\n    //TODO: 승리,패배,재시작 분리 작업 후 글자 표시 및 배경색 적용. 리그 종류 표기하기\n  });\n\n  const colors = useRef({\n    Remake: {\n      color: '#000000',\n    },\n    Victory: {\n      color: '#0008ff',\n    },\n    Defeat: {\n      color: '#f20045',\n    },\n  });\n\n  const findGameType = useCallback((queueId) => {\n    const output = [...queueType].find((type) => type.queueId === queueId)\n      .description;\n    if (output === null) {\n      return '';\n    }\n    return output.slice(0, output.length - 6);\n  });\n  return (\n    <article className=\"game-info\">\n      <p className=\"game-type\">{findGameType(queueId)}</p>\n      <p className=\"term\">{calcTerm(gameCreation)}</p>\n      <hr\n        style={{\n          border: 'thin solid #333',\n          width: '50%',\n          margin: '.5rem auto',\n        }}\n      />\n      <p className=\"status\" style={colors.current[status]}>\n        {status}\n      </p>\n      <p className=\"duration\">{calcDuration(gameDuration)}</p>\n    </article>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function ImgComponent({ src, alt, className, borderColor }) {\n  return (\n    <img\n      src={src}\n      alt={alt}\n      className={className}\n      style={{ borderColor: borderColor || 'inherit' }}\n    />\n  );\n}\n\nImgComponent.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport ImgComponent from 'components/common/ImgComponent';\n\nfunction findSrc(runeJson, runeNum) {\n  for (const { id, icon, name, slots } of runeJson) {\n    if (id === runeNum) {\n      return {\n        src: `../img/${icon}`,\n        alt: name,\n      };\n    }\n    if (slots) {\n      for (const { runes } of slots) {\n        const inner = findSrc(runes, runeNum);\n        if (inner) return inner;\n      }\n    }\n  }\n  return false;\n}\n\nexport default function ChampRune({ runeNum }) {\n  const runeJson = useSelector((state) => state.json.runesReforged);\n  const [imgSrc, setImgSrc] = useState(false);\n  useEffect(() => {\n    setImgSrc(findSrc(runeJson, runeNum));\n  }, [runeJson, runeNum]);\n  if (!imgSrc) {\n    //TODO: 나중에 적절한 이미지로 대체 할 것.\n    return <div>Err</div>;\n  }\n  return <ImgComponent {...imgSrc} className=\"rune\" />;\n}\n\nChampRune.propTypes = {\n  runeNum: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport ImgComponent from 'components/common/ImgComponent';\n\nfunction findSrc(spellJson, spellNum) {\n  for (const key in spellJson.data) {\n    if (Object.hasOwnProperty.call(spellJson.data, key)) {\n      if (spellJson.data[key].key === String(spellNum)) {\n        return {\n          src: `https://ddragon.leagueoflegends.com/cdn/11.4.1/img/spell/${spellJson.data[key].id}.png`,\n          alt: spellJson.data[key].name,\n        };\n      }\n    }\n  }\n  return false;\n}\n\nexport default function ChampSpell({ spellNum }) {\n  const spellJson = useSelector((state) => state.json.summoner);\n  const [imgSrc, setImgSrc] = useState(false);\n  useEffect(() => {\n    setImgSrc(findSrc(spellJson, spellNum));\n  }, [spellNum, spellJson]);\n  if (!imgSrc) {\n    //TODO: 나중에 적절한 이미지로 대체 할 것.\n    return <div>Err</div>;\n  }\n  return <ImgComponent {...imgSrc} className=\"spell\" />;\n}\n\nChampSpell.propTypes = {\n  spellNum: PropTypes.number.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport ImgComponent from 'components/common/ImgComponent';\n\nimport './ChampPortrait.scss';\n\nconst champImgUrl =\n  'https://ddragon.leagueoflegends.com/cdn/11.4.1/img/champion/';\n\nfunction findSource(champJson, championId) {\n  for (const key in champJson) {\n    if (champJson[key].hasOwnProperty('key')) {\n      if (Number(champJson[key].key) === championId)\n        return {\n          src: champImgUrl + champJson[key].image.full,\n          alt: champJson[key].id,\n        };\n    }\n  }\n  return false;\n}\n\nexport default function ChampPortrait({\n  championId,\n  champLevel,\n  className,\n  right = 0,\n  top = 0,\n  borderColor,\n}) {\n  const champJson = useSelector((state) => state.json.champion.data);\n  const [imgSrc, setImgSrc] = useState(false);\n  useEffect(() => {\n    setImgSrc(findSource(champJson, championId));\n  }, [champJson, championId]);\n  if (!imgSrc) {\n    //TODO: 나중에 적절한 이미지로 대체 할 것.\n    return <div>Err</div>;\n  }\n  return (\n    <article\n      className={className || 'champ-portriat-component'}\n      style={{ right, top }}\n    >\n      {champLevel && <div className=\"champ-level\">{champLevel}</div>}\n      <ImgComponent\n        {...imgSrc}\n        className=\"champ-portrait\"\n        borderColor={borderColor}\n      />\n    </article>\n  );\n}\n\nChampPortrait.propTypes = {\n  championId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ChampScoreBox.scss';\n\nexport default function ChampScoreBox({\n  kills,\n  deaths,\n  assists,\n  goldEarned,\n  killRatio,\n}) {\n  return (\n    <article className=\"champ-score-box\">\n      <div className=\"kda\">\n        <span className=\"kill\">{kills}</span>\n        <span className=\"division\">&nbsp;/&nbsp;</span>\n        <span className=\"death\">{deaths}</span>\n        <span className=\"division\">&nbsp;/&nbsp;</span>\n        <span className=\"assist\">{assists}</span>\n      </div>\n      <div className=\"ka-ratio\">\n        P / Kill:&nbsp;\n        <span className=\"ka-ratio-score\">{killRatio}</span>%\n      </div>\n      <div className=\"cs\">\n        Gold:&nbsp;<span className=\"gold\">{goldEarned}</span>\n      </div>\n    </article>\n  );\n}\n\nChampScoreBox.prototype = {\n  kills: PropTypes.number.isRequired,\n  deaths: PropTypes.number.isRequired,\n  assists: PropTypes.number.isRequired,\n  goldEarned: PropTypes.number.isRequired,\n  totalKill: PropTypes.number.isRequired,\n};\n","import React from 'react';\n\nimport ChampRune from './ChampRune';\nimport ChampSpell from './ChampSpell';\nimport ChampPortrait from './ChampPortrait';\nimport ChampScoreBox from './ChampScoreBox';\n\nimport './ChampInfo.scss';\nexport default function ChampInfo({\n  firstSpellNum,\n  secondSpellNum,\n  firstRuneNum,\n  secondRuneNum,\n  championId,\n  champLevel,\n  kills,\n  deaths,\n  assists,\n  goldEarned,\n  killRatio,\n}) {\n  return (\n    <article className=\"champ-info\">\n      <article className=\"champ-spell\">\n        <ChampSpell spellNum={firstSpellNum} />\n        <ChampSpell spellNum={secondSpellNum} />\n      </article>\n      <article className=\"champ-rune\">\n        <div className=\"main-rune-bg\">\n          <ChampRune runeNum={firstRuneNum} />\n        </div>\n        <ChampRune runeNum={secondRuneNum} />\n      </article>\n\n      <ChampPortrait championId={championId} champLevel={champLevel} />\n      <ChampScoreBox\n        kills={kills}\n        deaths={deaths}\n        assists={assists}\n        goldEarned={goldEarned}\n        killRatio={killRatio}\n      />\n    </article>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ChampPortrait from './ChampPortrait';\n\nimport './ChampTeam.scss';\n\nexport default function ChampTeam({ teamInfo }) {\n  return (\n    <article className=\"champ-team\">\n      {teamInfo.map(({ championId, summonerName }, index) => (\n        <div key={index} className=\"content\">\n          <ChampPortrait championId={championId} />\n          <span className=\"summoner-name\">{summonerName}</span>\n        </div>\n      ))}\n    </article>\n  );\n}\n\nChampTeam.propTypes = {\n  teamInfo: PropTypes.array.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport ImgComponent from 'components/common/ImgComponent';\n\nconst itemImgUrl = 'https://ddragon.leagueoflegends.com/cdn/11.4.1/img/item/';\nconst blankSrc = {\n  src: '../img/blank.png',\n  alt: 'empty',\n};\nfunction makeImgAttribute(itemJson, itemNum) {\n  const itemInfo = itemJson[itemNum];\n  if (itemInfo) {\n    return {\n      src: itemImgUrl + itemInfo.image.full,\n      alt: itemInfo.name,\n    };\n  }\n  return blankSrc;\n}\n\nexport default function Item({ itemNum, className }) {\n  const itemJson = useSelector((state) => state.json.item.data);\n  const [imgSrc, setImgSrc] = useState(blankSrc);\n  useEffect(() => {\n    setImgSrc(makeImgAttribute(itemJson, itemNum));\n  }, [itemJson, itemNum]);\n  //BUG: 오른 강화아이템의 경우 data-dragon에서 이미지를 제공해주고 있지 않음. 이에 따라 버그가 발생됨\n  //관련 링크: https://github.com/RiotGames/developer-relations/issues/419\n  return <ImgComponent {...imgSrc} className={className} />;\n}\n\nItem.propTypes = {\n  itemNum: PropTypes.number.isRequired,\n};\n","export const trinketList = [2052, 3340, 3363, 3364];\n//teamId 100 is blue team\nexport const BuildingPosition11 = {\n  frame: {\n    blue: {\n      NEXUS_TURRET: {\n        1: true,\n        2: true,\n        3: true,\n      },\n      TOP_LANE: {\n        OUTER_TURRET: true,\n        INNER_TURRET: true,\n        BASE_TURRET: true,\n        UNDEFINED_TURRET: true,\n      },\n      MID_LANE: {\n        OUTER_TURRET: true,\n        INNER_TURRET: true,\n        BASE_TURRET: true,\n        UNDEFINED_TURRET: true,\n      },\n      BOT_LANE: {\n        OUTER_TURRET: true,\n        INNER_TURRET: true,\n        BASE_TURRET: true,\n        UNDEFINED_TURRET: true,\n      },\n    },\n    red: {\n      NEXUS_TURRET: {\n        1: true,\n        2: true,\n        3: true,\n      },\n      TOP_LANE: {\n        OUTER_TURRET: true,\n        INNER_TURRET: true,\n        BASE_TURRET: true,\n        UNDEFINED_TURRET: true,\n      },\n      MID_LANE: {\n        OUTER_TURRET: true,\n        INNER_TURRET: true,\n        BASE_TURRET: true,\n        UNDEFINED_TURRET: true,\n      },\n      BOT_LANE: {\n        OUTER_TURRET: true,\n        INNER_TURRET: true,\n        BASE_TURRET: true,\n        UNDEFINED_TURRET: true,\n      },\n    },\n  },\n  blue: {\n    NEXUS_TURRET: {\n      1: { x: 1748, y: 2270 },\n      2: { x: 2177, y: 1807 },\n      3: { x: 1500, y: 1500 }, // nexus\n    },\n    TOP_LANE: {\n      OUTER_TURRET: { x: 981, y: 10441 },\n      INNER_TURRET: { x: 1512, y: 6699 },\n      BASE_TURRET: { x: 1169, y: 4287 },\n      UNDEFINED_TURRET: { x: 1171, y: 3571 },\n    },\n    MID_LANE: {\n      OUTER_TURRET: { x: 5846, y: 6396 },\n      INNER_TURRET: { x: 5048, y: 4812 },\n      BASE_TURRET: { x: 3651, y: 3696 },\n      UNDEFINED_TURRET: { x: 3203, y: 3208 },\n    },\n    BOT_LANE: {\n      OUTER_TURRET: { x: 10504, y: 1029 },\n      INNER_TURRET: { x: 6919, y: 1483 },\n      BASE_TURRET: { x: 4281, y: 1253 },\n      UNDEFINED_TURRET: { x: 3452, y: 1236 },\n    },\n  },\n  red: {\n    NEXUS_TURRET: {\n      1: { x: 13052, y: 12612 },\n      2: { x: 12611, y: 13084 },\n      3: { x: 13500, y: 13500 }, // nexus\n    },\n    TOP_LANE: {\n      OUTER_TURRET: { x: 4318, y: 13875 },\n      INNER_TURRET: { x: 7943, y: 13411 },\n      BASE_TURRET: { x: 10481, y: 13650 },\n      UNDEFINED_TURRET: { x: 11261, y: 13676 },\n    },\n    MID_LANE: {\n      OUTER_TURRET: { x: 8955, y: 8510 },\n      INNER_TURRET: { x: 9767, y: 10113 },\n      BASE_TURRET: { x: 11134, y: 11207 },\n      UNDEFINED_TURRET: { x: 11598, y: 11667 },\n    },\n    BOT_LANE: {\n      OUTER_TURRET: { x: 13866, y: 4505 },\n      INNER_TURRET: { x: 13327, y: 8226 },\n      BASE_TURRET: { x: 13624, y: 10572 },\n      UNDEFINED_TURRET: { x: 13604, y: 11316 },\n    },\n  },\n};\nexport const BuildingPosition12 = {\n  frame: {\n    blue: {\n      NEXUS_TURRET: {\n        1: true,\n        2: true,\n        3: true,\n      },\n      MID_LANE: {\n        OUTER_TURRET: true,\n        INNER_TURRET: true,\n        BASE_TURRET: true,\n        UNDEFINED_TURRET: true,\n      },\n    },\n    red: {\n      NEXUS_TURRET: {\n        1: true,\n        2: true,\n        3: true,\n      },\n      MID_LANE: {\n        OUTER_TURRET: true,\n        INNER_TURRET: true,\n        BASE_TURRET: true,\n        UNDEFINED_TURRET: true,\n      },\n    },\n  },\n  blue: {\n    NEXUS_TURRET: {\n      1: { x: 1748, y: 2270 },\n      2: { x: 2177, y: 1807 },\n      3: { x: 1500, y: 1500 }, // nexus\n    },\n    MID_LANE: {\n      OUTER_TURRET: { x: 5846, y: 6396 },\n      INNER_TURRET: { x: 5048, y: 4812 },\n      BASE_TURRET: { x: 3651, y: 3696 },\n      UNDEFINED_TURRET: { x: 3203, y: 3208 },\n    },\n  },\n  red: {\n    NEXUS_TURRET: {\n      1: { x: 13052, y: 12612 },\n      2: { x: 12611, y: 13084 },\n      3: { x: 13500, y: 13500 }, // nexus\n    },\n    MID_LANE: {\n      OUTER_TURRET: { x: 8955, y: 8510 },\n      INNER_TURRET: { x: 9767, y: 10113 },\n      BASE_TURRET: { x: 11134, y: 11207 },\n      UNDEFINED_TURRET: { x: 11598, y: 11667 },\n    },\n  },\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Item from './Item';\n\nimport './ItemBox.scss';\nimport { trinketList } from 'fixture/fixedData';\n\nfunction makeItemBox(itemArray) {\n  const componentArr = [];\n  let hasTrinket = false;\n  for (let i = 0; i < 7; i++) {\n    if (trinketList.includes(itemArray[i])) {\n      hasTrinket = itemArray[i];\n    } else {\n      componentArr.push(itemArray[i]);\n    }\n  }\n  if (hasTrinket) {\n    componentArr.push(hasTrinket);\n  }\n  return componentArr;\n}\n\nexport default function ItemBox({ itemArray, grid }) {\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    setItems(makeItemBox(itemArray));\n  }, [itemArray]);\n  return (\n    <article className={grid ? 'item-box' : 'horizontal'}>\n      {items.map((itemNum, idx) => (\n        <Item\n          key={idx}\n          itemNum={itemNum}\n          className={idx === itemArray.length - 1 ? 'trinket' : 'item'}\n        />\n      ))}\n    </article>\n  );\n}\n\nItemBox.propTypes = {\n  itemArray: PropTypes.array.isRequired,\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport GameInfo from './GameInfo';\nimport ChampInfo from './Champ/ChampInfo';\nimport ChampTeam from './Champ/ChampTeam';\nimport ItemBox from './Item/ItemBox';\n\nimport './infoBox.scss';\nimport { AiFillPlayCircle } from 'react-icons/ai';\n\nconst initChmpInfo = {\n  firstSpellNum: 0,\n  secondSpellNum: 0,\n  firstRuneNum: 0,\n  secondRuneNum: 0,\n  championId: 0,\n  champLevel: 0,\n  kills: 0,\n  deaths: 0,\n  assists: 0,\n  goldEarned: 0,\n  killRatio: 0,\n};\nfunction makeTeam(identities, participants, name) {\n  let amIWin = false;\n  const blueTeam = [];\n  const redTeam = [];\n  const itemBox = [];\n  let blueKill = 0;\n  let redKill = 0;\n  let champInfo = {};\n  let myTeam;\n\n  participants.forEach(\n    ({\n      championId,\n      participantId,\n      teamId,\n      spell1Id,\n      spell2Id,\n      stats: {\n        win,\n        item0,\n        item1,\n        item2,\n        item3,\n        item4,\n        item5,\n        item6,\n        deaths,\n        kills,\n        assists,\n        goldEarned,\n        perk0,\n        perkSubStyle,\n        champLevel,\n      },\n    }) => {\n      const summonerName = identities[participantId - 1].player.summonerName;\n      if (summonerName.toLowerCase() === name.toLowerCase()) {\n        amIWin = win;\n        myTeam = teamId;\n        itemBox.push(item0, item1, item2, item3, item4, item5, item6);\n        champInfo = {\n          ...champInfo,\n          championId,\n          deaths,\n          kills,\n          assists,\n          goldEarned,\n          champLevel,\n          firstSpellNum: spell1Id,\n          secondSpellNum: spell2Id,\n          firstRuneNum: perk0,\n          secondRuneNum: perkSubStyle,\n        };\n      }\n      if (teamId === 100) {\n        blueKill += kills;\n        blueTeam.push({\n          championId,\n          summonerName,\n        });\n      } else {\n        redKill += kills;\n        redTeam.push({\n          championId,\n          summonerName,\n        });\n      }\n    },\n  );\n  const totalKill = myTeam === 100 ? blueKill : redKill;\n  const killRatio =\n    ((((champInfo.kills + champInfo.assists) / totalKill) * 10000) >> 0) / 100;\n  return [blueTeam, redTeam, itemBox, { ...champInfo, killRatio }, amIWin];\n}\n\nexport default function InfoBox({\n  gameId,\n  gameCreation,\n  queueId,\n  gameDuration,\n  participantIdentities,\n  participants,\n}) {\n  const history = useHistory();\n  const { name } = useParams();\n\n  const [blueTeam, setBlueTeam] = useState([]);\n  const [redTeam, setRedTeam] = useState([]);\n  const [itemBox, setItemBox] = useState([0, 0, 0, 0, 0, 0, 0]);\n  const [champInfo, setChampInfo] = useState(initChmpInfo);\n  const [gameStatus, setGameStatus] = useState(null);\n\n  const backgroundColors = useRef({\n    Remake: {\n      backgroundColor: '#888888',\n    },\n    Victory: {\n      backgroundColor: '#3388ff',\n    },\n    Defeat: {\n      backgroundColor: '#ff88aa',\n    },\n  });\n\n  useEffect(() => {\n    const [blue, red, items, champ, win] = makeTeam(\n      participantIdentities,\n      participants,\n      name,\n    );\n    setBlueTeam(blue);\n    setRedTeam(red);\n    setItemBox(items);\n    setChampInfo((old) => ({ ...old, ...champ }));\n    setGameStatus(() => {\n      if (gameDuration < 300) {\n        return 'Remake';\n      }\n      if (win) {\n        return 'Victory';\n      }\n      return 'Defeat';\n    });\n  }, [participantIdentities, participants, name]);\n  return (\n    <article className=\"info-box\" style={backgroundColors.current[gameStatus]}>\n      <GameInfo\n        queueId={queueId}\n        gameCreation={gameCreation}\n        gameDuration={gameDuration}\n        status={gameStatus}\n      />\n      <ChampInfo {...champInfo} />\n      <ItemBox itemArray={itemBox} grid={true} />\n      <ChampTeam teamInfo={blueTeam} />\n      <ChampTeam teamInfo={redTeam} />\n      <button\n        className=\"play-btn\"\n        onClick={() => history.push('/time-line/' + gameId)}\n      >\n        <AiFillPlayCircle />\n      </button>\n    </article>\n  );\n}\n","import React from 'react';\nimport ReactLoading from 'react-loading';\n\nimport './ComponentLoading.scss';\nexport default function Loading() {\n  return (\n    <section className=\"component-loading\">\n      <ReactLoading type=\"bubbles\" />\n    </section>\n  );\n}\n","import React, { useEffect, useState, useCallback, useRef } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport InfoBox from './InfoBox';\nimport Loading from 'components/common/ComponentLoading.jsx';\n\nimport { getmatchList, getMatchDto } from 'fixture/getInfoFuncs.js';\n\nconst gettingListNum = 5;\n\nfunction ShowMoreButton(canGetMoreData, onClick) {\n  if (canGetMoreData) {\n    return (\n      <button className=\"show-more-btn\" onClick={onClick}>\n        SHOW MORE\n      </button>\n    );\n  } else {\n    return <p className=\"show-more-btn\">END DATA</p>;\n  }\n}\n\nexport default function InfoBoxList({ account }) {\n  const apiKey = useSelector(({ apiKey: { key } }) => {\n    return key;\n  });\n  const [matchesArr, setMatchesArr] = useState([]);\n  const [canGetMoreData, setCanGetMoreData] = useState(true);\n  const [isLoading, setIsLoading] = useState(true);\n  const beginIndex = useRef(0);\n\n  const addMatchList = useCallback(async () => {\n    try {\n      const { current } = beginIndex;\n      setIsLoading(true);\n      const matchListData = await getmatchList(\n        current,\n        account,\n        gettingListNum,\n        apiKey,\n      );\n      const { matches, endIndex, totalGames } = matchListData;\n      if (endIndex === totalGames) {\n        setCanGetMoreData(false);\n      } else {\n        const promises = matches.map(({ gameId }) => {\n          return getMatchDto(gameId, apiKey);\n        });\n        const matchInfos = await Promise.all(promises);\n        setMatchesArr((oldInfo) => [...oldInfo, ...matchInfos]);\n        beginIndex.current += gettingListNum;\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [apiKey, account]);\n  //TODO: totalgame\n\n  useEffect(() => {\n    if (account !== null) {\n      addMatchList();\n    }\n    return () => {\n      setMatchesArr([]);\n      beginIndex.current = 0;\n    };\n  }, [account]);\n\n  return (\n    <article className=\"info-box-list\">\n      {matchesArr.map((gameInfo, index) => (\n        <InfoBox {...gameInfo} key={index} />\n      ))}\n      {isLoading && <Loading />}\n      {ShowMoreButton(canGetMoreData, addMatchList)}\n    </article>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\n\nimport ImgComponent from '../common/ImgComponent';\n\nimport './Profile.scss';\n\nconst profileUrl =\n  'https://ddragon.leagueoflegends.com/cdn/11.4.1/img/profileicon/';\n\nfunction FakePrifile() {\n  return (\n    <article className=\"profile\">\n      <div className=\"fake-img\"></div>\n      <div className=\"info\">\n        <div className=\"fake-title\"></div>\n        <div className=\"fake-description\"></div>\n      </div>\n    </article>\n  );\n}\n\nexport default function Profile({ loading, profileIconId, summonerLevel }) {\n  const { name } = useParams();\n  if (loading) {\n    return FakePrifile();\n  }\n  return (\n    <article className=\"profile\">\n      <ImgComponent\n        src={profileUrl + profileIconId + '.png'}\n        alt={String(profileIconId)}\n        className=\"profileIcon\"\n      />\n      <div className=\"info\">\n        <div className=\"name\">{name}</div>\n        <div className=\"level\">LV:&nbsp;{summonerLevel}</div>\n      </div>\n    </article>\n  );\n}\n\nProfile.propTypes = {\n  loading: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ImgComponent from '../common/ImgComponent';\n\nimport './Rank.scss';\n\nconst emblemUrl = '../img/emblems/Emblem_';\n\nfunction FakeRank() {\n  return (\n    <div className=\"rank\">\n      <div className=\"box\">\n        <div className=\"fake_img\"></div>\n        <div className=\"info\">\n          <div className=\"fake_title\"></div>\n          <div className=\"fake_description\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction RankBox(\n  tier = 'UNRANK',\n  queueType,\n  rank = '',\n  leaguePoints = 0,\n  wins = 0,\n  losses = 0,\n) {\n  return (\n    <div className=\"rank\">\n      <article className=\"box\">\n        <ImgComponent\n          src={emblemUrl + tier + '.png'}\n          alt={tier}\n          className=\"rank-emblem\"\n        />\n        <div className=\"info\">\n          <h2 className=\"queue-type\">{queueType}</h2>\n          <p className=\"tier\">Tier:&nbsp;{tier + rank}</p>\n          <p className=\"league-points\">League Points:&nbsp;{leaguePoints}</p>\n          <p className=\"score\">\n            <strong className=\"wins\">WIN:&nbsp;{wins}</strong>\n            <span className=\"division\">&nbsp;|&nbsp;</span>\n            <strong className=\"losses\">LOSE:&nbsp;{losses}</strong>\n          </p>\n        </div>\n      </article>\n    </div>\n  );\n}\n\nexport default function Rank({\n  loading,\n  tier,\n  queueType,\n  rank,\n  leaguePoints,\n  wins,\n  losses,\n}) {\n  if (loading) {\n    return FakeRank();\n  }\n  return RankBox(tier, queueType, rank, leaguePoints, wins, losses);\n}\n\nRank.propTypes = {\n  loading: PropTypes.bool.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport InfoBoxList from 'components/MatchList/InfoBoxList';\nimport TextLink from 'components/common/TextLink';\nimport SummonerSearchBar from 'components/common/SummonerSearchBar';\nimport Profile from 'components/MatchList/Profile';\nimport Rank from 'components/MatchList/Rank';\n\nimport './MatchList.scss';\n\nimport { getsummonerInfo, getLeagueInfo } from 'fixture/getInfoFuncs.js';\n\nexport default function MatchList() {\n  const { name } = useParams();\n\n  const [account, setAccount] = useState(null);\n  const [iconId, setIconId] = useState(null);\n  const [level, setLevel] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [soloLeagueInfo, setSoloLeagueInfo] = useState({\n    queueType: 'Ranked Solo',\n  });\n  const [flexLeagueInfo, setFlexLeagueInfo] = useState({\n    queueType: 'Ranked Flex',\n  });\n  const apiKey = useSelector(({ apiKey: { key } }) => {\n    return key;\n  });\n  useEffect(() => {\n    async function getJsonDatas() {\n      //TODO: 예외처리 넣어야함\n      try {\n        setLoading(true);\n        const {\n          id,\n          profileIconId,\n          accountId,\n          summonerLevel,\n        } = await getsummonerInfo(name, apiKey);\n        const league = await getLeagueInfo(id, apiKey);\n        setAccount(accountId);\n        setIconId(profileIconId);\n        setLevel(summonerLevel);\n        league.forEach((leagueInfo) => {\n          if (leagueInfo.queueType === 'RANKED_SOLO_5x5') {\n            setSoloLeagueInfo(\n              Object.assign(leagueInfo, {\n                queueType: 'Ranked Solo',\n              }),\n            );\n          } else if (leagueInfo.queueType === 'RANKED_FLEX_SR') {\n            setFlexLeagueInfo(\n              Object.assign(leagueInfo, {\n                queueType: 'Ranked Flex',\n              }),\n            );\n          }\n        });\n      } catch (error) {\n      } finally {\n        setLoading(false);\n      }\n    }\n    getJsonDatas();\n  }, [name, apiKey]);\n  return (\n    <section className=\"match-list\">\n      <div className=\"top-nav\">\n        <TextLink label=\"LoLSimpleViewer\" url=\"/\" fontSize=\"2rem\" />\n        <SummonerSearchBar />\n      </div>\n      <div className=\"content\">\n        <div className=\"left-content\">\n          {\n            <Profile\n              loading={loading}\n              profileIconId={iconId}\n              summonerLevel={level}\n            />\n          }\n          {<Rank loading={loading} {...soloLeagueInfo} />}\n          {<Rank loading={loading} {...flexLeagueInfo} />}\n        </div>\n\n        <div className=\"right-content\">\n          <InfoBoxList account={account} />\n        </div>\n      </div>\n    </section>\n  );\n}\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport ItemBox from 'components/MatchList/Item/ItemBox';\nimport ChampPortrait from 'components/MatchList/Champ/ChampPortrait';\n\nimport { trinketList } from 'fixture/fixedData';\n\nimport './ItemBoard.scss';\n\nconst soleItemList = [2003, 2010, 2055];\n\n//BUG: 예전 시즌 아이템들을 받아오지 못하는 오류가 발생함.\n\nfunction ItemRow(item, index, participantChamps) {\n  return (\n    <article\n      className=\"item-row\"\n      style={{\n        backgroundColor: index < 5 ? '#3388ff' : '#ff88aa',\n      }}\n      key={index}\n    >\n      <ChampPortrait\n        championId={participantChamps[index + 1]}\n        className=\"champ-portrait\"\n      />\n      <ItemBox itemArray={item} />\n    </article>\n  );\n}\n\nfunction TeamBoard(itemStatus, teamColor, participantChamps) {\n  const startIdx = teamColor === 'blue' ? 0 : 5;\n  const rows = [];\n  for (let i = 0; i < 5; i++) {\n    const index = startIdx + i;\n    rows.push(ItemRow(itemStatus[index], index, participantChamps));\n  }\n  return (\n    <div\n      className=\"teamBoard\"\n      style={{\n        backgroundColor: teamColor === 'blue' ? '#3388ff' : '#ff88aa',\n      }}\n    >\n      {rows}\n    </div>\n  );\n}\n\nexport default function ItemBoard({ itemLogs, participantChamps, curTime }) {\n  const [itemStatus, setItemStatus] = useState(\n    Array.from(Array(10), () => Array(7).fill(0)),\n  );\n  const soleItems = useRef(Array.from(Array(10), () => Array(3).fill(0)));\n  useEffect(() => {\n    (function checkItemLog() {\n      if (!itemLogs) return;\n      const initItemStatus = Array.from(Array(10), () => Array(7).fill(0));\n      const initSoleItems = Array.from(Array(10), () => Array(3).fill(0));\n      for (const key in itemLogs) {\n        if (key > curTime) break;\n        itemLogs[key].forEach((item, index) => {\n          setItemStatus(() => {\n            if (item && item.hasOwnProperty('ITEM_DESTROYED')) {\n              const itemNum = item.ITEM_DESTROYED;\n              const soleIdx = soleItemList.findIndex((val) => val === itemNum);\n              if (soleIdx >= 0) {\n                initSoleItems[index][soleIdx] =\n                  initSoleItems[index][soleIdx] > 0\n                    ? initSoleItems[index][soleIdx] - 1\n                    : 0;\n                if (initSoleItems[index][soleIdx] > 0) {\n                  soleItems.current = initSoleItems;\n                  return initItemStatus;\n                }\n              }\n              const vacancyIndex = initItemStatus[index].findIndex(\n                (val) => val === itemNum,\n              );\n              vacancyIndex < 0 || (initItemStatus[index][vacancyIndex] = 0);\n            }\n            if (item && item.hasOwnProperty('ITEM_SOLD')) {\n              const itemNum = item.ITEM_SOLD;\n              const soleIdx = soleItemList.findIndex((val) => val === itemNum);\n              if (soleIdx >= 0) {\n                initSoleItems[index][soleIdx] =\n                  initSoleItems[index][soleIdx] > 0\n                    ? initSoleItems[index][soleIdx] - 1\n                    : 0;\n                if (initSoleItems[index][soleIdx] > 0) {\n                  soleItems.current = initSoleItems;\n                  return initItemStatus;\n                }\n              }\n              const vacancyIndex = initItemStatus[index].findIndex(\n                (val) => val === itemNum,\n              );\n              vacancyIndex < 0 || (initItemStatus[index][vacancyIndex] = 0);\n            }\n            if (item && item.hasOwnProperty('ITEM_PURCHASED')) {\n              const itemNum = item.ITEM_PURCHASED;\n              const soleIdx = soleItemList.findIndex((val) => val === itemNum);\n\n              if (soleIdx >= 0) {\n                initSoleItems[index][soleIdx] =\n                  initSoleItems[index][soleIdx] + 1;\n                if (initSoleItems[index][soleIdx] > 1) {\n                  soleItems.current = initSoleItems;\n                  return initItemStatus;\n                }\n              }\n              if (trinketList.findIndex((val) => val === itemNum) !== -1) {\n                initItemStatus[index][6] = itemNum;\n              } else {\n                const vacancyIndex = initItemStatus[index].findIndex(\n                  (val) => val === 0,\n                );\n                if (vacancyIndex >= 0 && vacancyIndex < 6) {\n                  initItemStatus[index][vacancyIndex] = itemNum;\n                }\n              }\n            }\n            if (item && item.hasOwnProperty('FINAL')) {\n              initItemStatus[index] = item.FINAL;\n            }\n            soleItems.current = initSoleItems;\n            return initItemStatus;\n          });\n        });\n      }\n    })();\n  }, [curTime, itemLogs]);\n  return (\n    <section className=\"ItemBoard\">\n      {TeamBoard(itemStatus, 'blue', participantChamps)},\n      {TeamBoard(itemStatus, 'red', participantChamps)}\n    </section>\n  );\n}\n","import React, { useEffect, useState, useRef } from 'react';\n\nimport ImgComponent from '../common/ImgComponent';\nimport ChampPortrait from '../MatchList/Champ/ChampPortrait';\nimport { BuildingPosition11, BuildingPosition12 } from 'fixture/fixedData.js';\nimport './MapBoard.scss';\n\nfunction drawBuildings(ratio, buildingPosition, { current }) {\n  const { blue, red } = buildingPosition;\n  const arr = [];\n  Object.keys(blue).forEach((key) => {\n    arr.push(\n      ...drawBuilding(blue[key], ratio, 'BLUE' + key, current.blue[key]),\n    );\n  });\n  Object.keys(red).forEach((key) => {\n    arr.push(...drawBuilding(red[key], ratio, 'RED' + key, current.red[key]));\n  });\n  return arr;\n}\n\nfunction drawBuilding(building, ratio, lane, status) {\n  return Object.keys(building).map((key) => {\n    if (!status[key]) return;\n    const { x, y } = building[key];\n    return (\n      <div\n        key={lane + key}\n        className={`building ${lane} ${key}`}\n        style={{ right: (x - 193) * ratio, top: (y - 10) * ratio }}\n      ></div>\n    );\n  });\n}\nexport default function MapBoard({\n  mapId,\n  moveFrame,\n  participantChamps,\n  curTime,\n  accDestBuild,\n}) {\n  const ref = useRef();\n  const [positions, setPositions] = useState(Array(10).fill({ x: 0, y: 0 }));\n  //NOTE: deep copy instance\n  const buildings = useRef(\n    JSON.parse(\n      JSON.stringify(\n        mapId === 11 ? BuildingPosition11.frame : BuildingPosition12.frame,\n      ),\n    ),\n  );\n  const [ratio, setRatio] = useState(1);\n  useEffect(() => {\n    setRatio(ref.current.offsetWidth / 14865);\n  });\n  useEffect(() => {\n    let curkey = 0;\n    for (const key in moveFrame) {\n      if (key > curTime) break;\n      curkey = key;\n    }\n    setPositions((oldVal) =>\n      moveFrame[curkey].map((val, idx) => (val ? val : oldVal[idx])),\n    );\n    let buildKey = 0;\n    for (const key in accDestBuild) {\n      if (key > curTime) break;\n      buildKey = key;\n    }\n    accDestBuild[buildKey].forEach((val) => {\n      const { teamId, laneType, towerType } = val;\n      const oldVal = buildings.current;\n      const team = teamId === 100 ? 'blue' : 'red';\n      if (towerType === 'NEXUS_TURRET') {\n        for (const key in oldVal[team][towerType]) {\n          if (!oldVal[team][towerType][key]) {\n            oldVal[team][towerType][key] = false;\n            break;\n          }\n        }\n      } else {\n        oldVal[team][laneType][towerType] = false;\n      }\n    });\n\n    return () => {\n      //NOTE: deep copy instance\n      buildings.current = JSON.parse(\n        JSON.stringify(\n          mapId === 11 ? BuildingPosition11.frame : BuildingPosition12.frame,\n        ),\n      );\n    };\n  }, [curTime]);\n\n  if (!participantChamps || !mapId) return <div>loading</div>;\n  return (\n    <article className=\"map-board\" ref={ref}>\n      <ImgComponent\n        src={`https://ddragon.leagueoflegends.com/cdn/6.8.1/img/map/map${mapId}.png`}\n        alt={'map' + mapId}\n        className=\"mini-map\"\n      />\n      {drawBuildings(\n        ratio,\n        mapId === 11 ? BuildingPosition11 : BuildingPosition12,\n        buildings,\n      )}\n      {Object.keys(participantChamps).map((key, index) => (\n        <ChampPortrait\n          championId={participantChamps[key]}\n          className=\"map-champ-portrait\"\n          key={key}\n          right={(positions[index].y - 349) * ratio}\n          top={(positions[index].x + 197) * ratio}\n          borderColor={index < 5 ? '#3388ff' : '#ff88aa'}\n        />\n      ))}\n    </article>\n  );\n}\n","import React from 'react';\n\nimport ChampPortrait from '../MatchList/Champ/ChampPortrait';\n\nimport './BoardLine.scss';\n\nfunction minsec(timestamp) {\n  const min = Math.floor(timestamp / 1000 / 60);\n  const sec = Math.floor(timestamp / 1000 - min * 60);\n  return `${min}분 ${sec}초`;\n}\n\nfunction champImage(championId, id) {\n  if (id === 0) {\n    return (\n      <div className=\"board-portrait\">\n        <img src=\"../../img/Turret.jpg\" alt=\"turret\" />\n      </div>\n    );\n  } else {\n    return (\n      <ChampPortrait\n        championId={championId}\n        className={'board-portrait ' + id}\n        borderColor={id < 6 ? '#3388ff' : '#ff88aa'}\n      />\n    );\n  }\n}\n\nfunction eliteMonsterImage(championId, monsterType, monsterSubType) {\n  if (monsterType === 'DRAGON')\n    return (\n      <div className=\"board-portrait\">\n        <img\n          src={'../../img/dragon/' + monsterSubType + '.png'}\n          alt=\"minion\"\n          style={{ borderColor: championId < 6 ? '#3388ff' : '#ff88aa' }}\n        />\n      </div>\n    );\n  else if (monsterType === 'RIFTHERALD') {\n    return (\n      <div className=\"board-portrait\">\n        <img\n          src=\"../../img/RIFTHERALD.jpg\"\n          alt=\"minion\"\n          style={{ borderColor: championId < 6 ? '#3388ff' : '#ff88aa' }}\n        />\n      </div>\n    );\n  } else if (monsterType === 'BARON_NASHOR') {\n    return (\n      <div className=\"board-portrait\">\n        <img\n          src=\"https://ddragon.leagueoflegends.com/cdn/11.4.1/img/profileicon/839.png\"\n          alt=\"minion\"\n          style={{ borderColor: championId < 6 ? '#3388ff' : '#ff88aa' }}\n        />\n      </div>\n    );\n  }\n}\n\nfunction turretImgage(teamId, buildingType) {\n  if (buildingType === 'TOWER_BUILDING') {\n    return (\n      <div className=\"board-portrait\">\n        <img\n          src=\"../../img/Turret.jpg\"\n          alt=\"Turret\"\n          style={{ borderColor: teamId === 100 ? '#3388ff' : '#ff88aa' }}\n        />\n      </div>\n    );\n  } else if (buildingType === 'INHIBITOR_BUILDING') {\n    return (\n      <div className=\"board-portrait\">\n        <img\n          src=\"../../img/Inhibitor.png\"\n          alt=\"Inhibitor\"\n          style={{ borderColor: teamId === 100 ? '#3388ff' : '#ff88aa' }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default function BoardLine({ event, participantChamps, timestamp }) {\n  return Object.keys(event).map((key, index) => {\n    if (key === 'CHAMPION_KILL') {\n      const { killerId, victimId } = event[key];\n      return (\n        <div key={key} className=\"board-line\">\n          <div className=\"timestamp\">{minsec(timestamp)}</div>\n          {champImage(participantChamps[killerId], killerId)}\n          <div className=\"killed-text\">Killed</div>\n          {champImage(participantChamps[victimId], victimId)}\n        </div>\n      );\n    } else if (key === 'ELITE_MONSTER_KILL') {\n      const { killerId, monsterType, monsterSubType } = event[key];\n      return (\n        <div key={key} className=\"board-line\">\n          <div className=\"timestamp\">{minsec(timestamp)}</div>\n          {eliteMonsterImage(killerId, monsterType, monsterSubType)}\n          <div className=\"killed-text\">Killed</div>\n        </div>\n      );\n    } else if (key === 'BUILDING_KILL') {\n      const { buildingType, teamId } = event[key];\n      return (\n        <div key={key} className=\"board-line\">\n          <div className=\"timestamp\">{minsec(timestamp)}</div>\n          {turretImgage(teamId, buildingType)}\n          <div className=\"killed-text\">Destroyed</div>\n        </div>\n      );\n    }\n  });\n}\n","import React, { useRef, useEffect } from 'react';\n\nimport BoardLine from './BoardLine';\n\nimport './Board.scss';\n\nexport default function Board({ eventLogs, participantChamps, curTime }) {\n  const end = useRef();\n  useEffect(() => {\n    end.current.scrollIntoView();\n  });\n  if (!eventLogs) return <div>loading</div>;\n  function showBoadLine() {\n    const eventLine = [];\n    for (const key in eventLogs) {\n      if (key > curTime) break;\n      eventLine.push(\n        <BoardLine\n          participantChamps={participantChamps}\n          event={eventLogs[key]}\n          timestamp={key}\n          key={key}\n        />,\n      );\n    }\n    return eventLine;\n  }\n  return (\n    <article className=\"board\">\n      {showBoadLine()}\n      <div ref={end}></div>\n    </article>\n  );\n}\n","import React, { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ProgressBar.scss';\n\nexport default function ProgressBar({\n  totalTime,\n  curTime,\n  loadingTime,\n  curTimeController,\n  setIsRunning,\n}) {\n  const [isHover, setIsHover] = useState(false);\n  const [isClicked, setIsClicked] = useState(false);\n  const [progressRate, setProgressRate] = useState(0);\n  const [loadingRate, setLoadingRate] = useState(0);\n  const [hoverRate, setHoverRate] = useState(0);\n\n  const bar = useRef();\n  function calcCurRate(e) {\n    const curX = e.clientX;\n    const barInfo = bar.current.getBoundingClientRect();\n    const parentWidth = barInfo.width;\n    let curWidth = curX - barInfo.left;\n    if (curWidth < 0) {\n      curWidth = 0;\n    }\n    if (curWidth > parentWidth) {\n      curWidth = parentWidth;\n    }\n    return curWidth / parentWidth;\n  }\n\n  function windowMouseMove(e) {\n    const curRate = calcCurRate(e);\n    curTimeController(Math.round(totalTime * curRate));\n    setHoverRate(curRate);\n  }\n\n  function mouseHoverMove(e) {\n    if (isClicked) {\n      return;\n    }\n    const curRate = calcCurRate(e);\n    setHoverRate(curRate);\n  }\n  useEffect(() => {\n    setProgressRate(curTime / totalTime);\n  }, [totalTime, curTime]);\n\n  useEffect(() => {\n    setLoadingRate(loadingTime / totalTime);\n  }, [totalTime, loadingTime]);\n  return (\n    <div\n      ref={bar}\n      className=\"progress-bar\"\n      onMouseEnter={() => setIsHover(true)}\n      onMouseLeave={() => setIsHover(false)}\n      onMouseMove={(e) => mouseHoverMove(e)}\n      onMouseDown={(e) => {\n        let prevRunningState;\n        setIsClicked(true);\n        setIsRunning((prevState) => {\n          prevRunningState = prevState;\n          return false;\n        });\n        curTimeController(Math.round(totalTime * hoverRate));\n        window.addEventListener(\n          'mouseup',\n          () => {\n            setIsRunning(prevRunningState);\n            window.removeEventListener('mousemove', windowMouseMove, false);\n            setIsClicked(false);\n          },\n          { once: true },\n        );\n        window.addEventListener('mousemove', windowMouseMove, false);\n      }}\n      style={{ height: isHover ? '12px' : '10px' }}\n    >\n      <div\n        className=\"progress\"\n        style={{ transform: `scaleX(${progressRate})` }}\n      ></div>\n      {isHover && (\n        <div\n          className=\"hover\"\n          style={{ transform: `scaleX(${hoverRate})` }}\n        ></div>\n      )}\n      <div\n        className=\"loading\"\n        style={{ transform: `scaleX(${loadingRate})` }}\n      ></div>\n      {(isHover || isClicked) && (\n        <div\n          className=\"indicator\"\n          style={{\n            left: `${progressRate * 100}%`,\n            transform: 'translate(-50%, -50%)',\n          }}\n        ></div>\n      )}\n    </div>\n  );\n}\n\nProgressBar.propTypes = {\n  totalTime: PropTypes.number.isRequired,\n  curTime: PropTypes.number.isRequired,\n  loadingTime: PropTypes.number.isRequired,\n  curTimeController: PropTypes.func.isRequired,\n  setIsRunning: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nfunction playButton() {\n  return (\n    <svg\n      xmlns=\"https://www.w3.org/2000/svg\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n    >\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M8 5v14l11-7z\" />\n    </svg>\n  );\n}\n\nfunction pauseButton() {\n  return (\n    <svg\n      xmlns=\"https://www.w3.org/2000/svg\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n    >\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\" />\n    </svg>\n  );\n}\n\nfunction replayButton() {\n  return (\n    <svg\n      xmlns=\"https://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      fill=\"black\"\n      width=\"18px\"\n      height=\"18px\"\n    >\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M12 5V1L7 6l5 5V7c3.31 0 6 2.69 6 6s-2.69 6-6 6-6-2.69-6-6H4c0 4.42 3.58 8 8 8s8-3.58 8-8-3.58-8-8-8z\" />\n    </svg>\n  );\n}\n\nexport default function ControllerButton({\n  controllerState,\n  onClickControllerButton,\n}) {\n  return (\n    <button onClick={() => onClickControllerButton()}>\n      {controllerState === 0 && pauseButton()}\n      {controllerState === 1 && playButton()}\n      {controllerState === 2 && replayButton()}\n    </button>\n  );\n}\n","import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ProgressBar from './ProgressBar';\nimport ControllerButton from './ControllerButton';\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n\nexport default function PlayerController({ totalTime, curTime, setCurTime }) {\n  //NOTE: curTime 실험을 위해 curTime 으로 사용중\n  const [controllerState, setControllerState] = useState(0);\n  const [delay, setDelay] = useState(10);\n  const [isRunning, setIsRunning] = useState(true);\n\n  useInterval(\n    () => {\n      setCurTime((prevTime) => {\n        let nextTime = prevTime + 1000;\n        if (nextTime >= totalTime) {\n          nextTime = totalTime;\n          setDelay(null);\n          setControllerState(2);\n        }\n        return nextTime;\n      });\n    },\n    isRunning ? delay : null,\n  );\n\n  const curTimeController = useCallback(\n    (time) => {\n      if (controllerState === 2) {\n        setDelay(10);\n        setControllerState(0);\n      }\n      setCurTime(time);\n    },\n    [controllerState],\n  );\n\n  const onClickControllerButton = useCallback(() => {\n    setControllerState((oldVal) => {\n      if (oldVal === 0) {\n        setIsRunning(false);\n        return 1;\n      }\n      if (oldVal === 2) {\n        setCurTime(0);\n      }\n      setIsRunning(true);\n      return 0;\n    });\n  }, []);\n  return (\n    <div className=\"player-controller\">\n      <ProgressBar\n        totalTime={totalTime}\n        curTime={curTime}\n        loadingTime={75}\n        curTimeController={curTimeController}\n        setIsRunning={setIsRunning}\n      />\n      <ControllerButton\n        controllerState={controllerState}\n        onClickControllerButton={onClickControllerButton}\n      />\n    </div>\n  );\n}\n\nPlayerController.propTypes = {\n  totalTime: PropTypes.number.isRequired,\n  curTime: PropTypes.number.isRequired,\n  setCurTime: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport ReactLoading from 'react-loading';\n\nimport './Loading.scss';\nexport default function Loading() {\n  return (\n    <section className=\"loading\">\n      <ReactLoading type=\"spin\" />\n    </section>\n  );\n}\n","import React, { useEffect, useState, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport ItemBoard from 'components/TimeLine/ItemBoard';\nimport MapBoard from 'components/TimeLine/MapBoard';\nimport Board from 'components/TimeLine/Board';\nimport PlayerController from 'components/TimeLine/PlayerController';\nimport Loading from '../common/Loading';\n\nimport { getTimeLine, getMatchDto } from 'fixture/getInfoFuncs.js';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\n\nimport './TimeLine.scss';\n\nfunction calcRespawn(deathtimeStamp, level) {\n  //ref: https://leagueoflegends.fandom.com/wiki/Death\n  let BRW;\n  if (level < 7) {\n    BRW = level * 2 + 4;\n  } else if (level > 7) {\n    BRW = level * 2.5 + 7.5;\n  } else {\n    BRW = 21;\n  }\n  let increase = 0;\n  if (deathtimeStamp > 15 * 60 * 1000) {\n    increase +=\n      (BRW / 100) * (Math.floor(deathtimeStamp / 60 / 1000) - 15) * 2 * 0.425;\n  }\n  if (deathtimeStamp > 30 * 60 * 1000) {\n    increase +=\n      (BRW / 100) * (Math.floor(deathtimeStamp / 60 / 1000) - 30) * 2 * 0.3;\n  }\n  if (deathtimeStamp > 45 * 60 * 1000) {\n    increase +=\n      (BRW / 100) * (Math.floor(deathtimeStamp / 60 / 1000) - 45) * 2 * 1.45;\n  }\n  BRW *= 1000;\n  const maxout = BRW * 0.5;\n  return deathtimeStamp + BRW + (maxout > increase ? increase : maxout);\n}\n\n//NOTE: This func is changing parameter's status\nfunction makeLogTime(logs, timestamp) {\n  if (logs.hasOwnProperty(timestamp)) return;\n  const initArr = [];\n  initArr.length = 10;\n  initArr.fill(null);\n  logs[timestamp] = initArr;\n}\n\nfunction addMoveLog(moveLogs, { timestamp, participantId }, position) {\n  makeLogTime(moveLogs, timestamp);\n  moveLogs[timestamp][participantId - 1] = position;\n}\n\nfunction addItemLog(itemLogs, { timestamp, participantId, type, itemId }) {\n  makeLogTime(itemLogs, timestamp);\n  if (!itemLogs[timestamp][participantId - 1]) {\n    itemLogs[timestamp][participantId - 1] = {};\n  }\n  itemLogs[timestamp][participantId - 1][type] = itemId;\n}\n\nfunction addEventLog(\n  eventLogs,\n  {\n    timestamp,\n    type,\n    killerId,\n    victimId,\n    monsterType,\n    monsterSubType,\n    buildingType,\n    laneType,\n    teamId,\n    towerType,\n  },\n) {\n  if (!eventLogs.hasOwnProperty(timestamp)) {\n    eventLogs[timestamp] = {};\n  }\n  switch (type) {\n    case 'CHAMPION_KILL':\n      eventLogs[timestamp][type] = { killerId, victimId };\n      break;\n    case 'ELITE_MONSTER_KILL':\n      eventLogs[timestamp][type] = { killerId, monsterType, monsterSubType };\n      break;\n    case 'BUILDING_KILL':\n      eventLogs[timestamp][type] = {\n        killerId,\n        buildingType,\n        laneType,\n        teamId,\n        towerType,\n      };\n      break;\n    default:\n  }\n}\n\nfunction extractEvents(\n  events,\n  moveLogs,\n  itemLogs,\n  eventLogs,\n  dragonList,\n  accDestroyedBuilding,\n) {\n  events.forEach((event) => {\n    switch (event.type) {\n      case 'CHAMPION_KILL':\n        addMoveLog(\n          moveLogs,\n          { timestamp: event.timestamp, participantId: event.killerId },\n          event.position,\n        );\n        addMoveLog(\n          moveLogs,\n          { timestamp: event.timestamp, participantId: event.victimId },\n          moveLogs[0][event.victimId - 1],\n        );\n        //TODO: 회색 아이콘 만들고 부활시간 계산해서 돌아가도록 만들어줘야함 -> eventlog를 통해서 파악. 건물 엘리트 몬스터들도\n        addEventLog(eventLogs, event);\n        break;\n      case 'BUILDING_KILL':\n        addEventLog(eventLogs, event);\n        addMoveLog(\n          moveLogs,\n          { timestamp: event.timestamp, participantId: event.killerId },\n          event.position,\n        );\n        (function addAccDestroyedBuilding() {\n          const { teamId, towerType, laneType, timestamp } = event;\n          accDestroyedBuilding.last.push({ teamId, towerType, laneType });\n          accDestroyedBuilding[timestamp] = [...accDestroyedBuilding.last];\n        })();\n        break;\n      case 'ELITE_MONSTER_KILL':\n        if (event.monsterType === 'DRAGON')\n          dragonList.push(event.monsterSubType);\n        addMoveLog(\n          moveLogs,\n          { timestamp: event.timestamp, participantId: event.killerId },\n          event.position,\n        );\n        addEventLog(eventLogs, event);\n        break;\n      case 'ITEM_PURCHASED':\n        addMoveLog(moveLogs, event, moveLogs[0][event.participantId - 1]);\n        addItemLog(itemLogs, event);\n        break;\n      case 'ITEM_SOLD':\n        addMoveLog(moveLogs, event, moveLogs[0][event.participantId - 1]);\n        addItemLog(itemLogs, event);\n        break;\n      case 'ITEM_DESTROYED':\n        addItemLog(itemLogs, event);\n        break;\n      default:\n    }\n  });\n}\n\nfunction makeLogs({ frames }, { gameDuration, participants }) {\n  const endTime = (gameDuration + 1) * 1000;\n  const participantChamps = {};\n  const moveLogs = {};\n  const itemLogs = {};\n  const eventLogs = {};\n  const accDestroyedBuilding = { last: [], 0: [] };\n  const dragonList = [];\n  frames.forEach(({ events, participantFrames, timestamp }) => {\n    for (const key in participantFrames) {\n      const { participantId, position } = participantFrames[key];\n      addMoveLog(moveLogs, { timestamp, participantId }, position);\n    }\n    extractEvents(\n      events,\n      moveLogs,\n      itemLogs,\n      eventLogs,\n      dragonList,\n      accDestroyedBuilding,\n    );\n  });\n  participants.forEach(\n    ({\n      participantId,\n      championId,\n      stats: { item0, item1, item2, item3, item4, item5, item6 },\n    }) => {\n      participantChamps[participantId] = championId;\n      addItemLog(itemLogs, {\n        timestamp: endTime,\n        participantId,\n        type: 'FINAL',\n        itemId: [item0, item1, item2, item3, item4, item5, item6],\n      });\n    },\n  );\n  return [\n    endTime,\n    participantChamps,\n    moveLogs,\n    itemLogs,\n    eventLogs,\n    accDestroyedBuilding,\n  ];\n}\n\n//TODO: 뒤로가기\n//TODO: TimeLine Filter\nexport default function TimeLine() {\n  const apiKey = useSelector(({ apiKey: { key } }) => {\n    return key;\n  });\n  const history = useHistory();\n  const { matchId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [endTime, setEndTime] = useState(false);\n  const [moveLogs, setMoveLogs] = useState(false);\n  const [itemLogs, setItemLogs] = useState(false);\n  const [eventLogs, setEventLogs] = useState(false);\n  const [participantChamps, setParticipantChamps] = useState(false);\n  const [curTime, setCurTime] = useState(0);\n  const [map, setMap] = useState();\n  const accDestBuild = useRef();\n\n  useEffect(() => {\n    (async () => {\n      const timeLine = await getTimeLine(matchId, apiKey);\n      const matchDto = await getMatchDto(matchId, apiKey);\n      const { mapId } = matchDto;\n      setMap(mapId);\n      const [end, champ, move, item, event, accDestroyedBuilding] = makeLogs(\n        timeLine,\n        matchDto,\n      );\n      accDestBuild.current = accDestroyedBuilding;\n      setEndTime(end);\n      setMoveLogs(move);\n      setItemLogs(item);\n      setEventLogs(event);\n      setParticipantChamps(champ);\n      setIsLoading(true);\n    })();\n  }, [matchId]);\n  if (!isLoading) {\n    return <Loading />;\n  }\n  return (\n    <section className=\"time-line\">\n      <button className=\"go-back\" onClick={() => history.goBack()}>\n        <AiOutlineArrowLeft />\n      </button>\n      <div className=\"left\">\n        <ItemBoard\n          itemLogs={itemLogs}\n          participantChamps={participantChamps}\n          curTime={curTime}\n        />\n      </div>\n      <div className=\"center\">\n        <MapBoard\n          mapId={map}\n          moveFrame={moveLogs}\n          participantChamps={participantChamps}\n          curTime={curTime}\n          accDestBuild={accDestBuild.current}\n        />\n        <PlayerController\n          totalTime={endTime}\n          curTime={curTime}\n          setCurTime={setCurTime}\n        />\n      </div>\n      <div className=\"right\">\n        <Board\n          eventLogs={eventLogs}\n          participantChamps={participantChamps}\n          curTime={curTime}\n        />\n      </div>\n    </section>\n  );\n}\n","import React from 'react';\n\nimport TextLink from 'components/common/TextLink';\n\nimport './Error.scss';\n\nexport default function NotFound({ text }) {\n  return (\n    <section className=\"request-err\">\n      <TextLink label=\"LoLSimpleViewer\" url=\"/\" fontSize=\"5rem\" />\n      <p>{text}</p>\n    </section>\n  );\n}\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Main from './views/Main/Main';\nimport MatchList from './views/MatchList/MatchList';\nimport TimeLine from './views/TimeLine/TimeLine';\nimport Error from './views/error/Error';\n\nexport default function Routes() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Main} />\n        <Route exact path=\"/match-list/:name\" component={MatchList} />\n        <Route exact path=\"/time-line/:matchId\" component={TimeLine} />\n        <Route\n          exact\n          path=\"/bad-request\"\n          render={() => <Error text={'500. Bad Request'} />}\n        />\n        <Route\n          exact\n          path=\"*\"\n          render={() => <Error text={'sorry. we can not find the page'} />}\n        />\n      </Switch>\n    </Router>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport SummonerSearchBar from 'components/common/SummonerSearchBar';\nimport TextLink from 'components/common/TextLink';\nimport Button from 'components/common/Button';\n\nimport { setApiKey } from 'store/action/apiKey.js';\n\nimport './ApiKey.scss';\n\nexport default function ApiKey() {\n  const [key, setKey] = useState('');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const token = localStorage.getItem('lol-token');\n    if (token !== null) {\n      dispatch(setApiKey(token));\n    }\n  }, []);\n  function registKey() {\n    if (key === '') {\n      return;\n    }\n    const token = localStorage.setItem('lol-token', key);\n    dispatch(setApiKey(key));\n  }\n  return (\n    <section className=\"api-key\">\n      <TextLink label=\"LoLSimpleViewer\" fontSize=\"5rem\" />\n      <p>We need api-key for using Riot's API</p>\n      <div className=\"riot-dev-site\">\n        <p>You can get API-key in here :</p>\n        <a href=\"https://developer.riotgames.com/\">\n          <img src=\"./img/riotLogo.png\" alt=\"riot developer\" />\n        </a>\n      </div>\n      <div className=\"api-key--input\">\n        <span>KEY:&nbsp;</span>\n        <input\n          type=\"password\"\n          value={key}\n          onChange={(e) => setKey(e.target.value)}\n          onKeyDown={(e) => {\n            e.key === 'Enter' && registKey();\n          }}\n        />\n        <Button label=\"regist\" onClick={registKey} />\n      </div>\n    </section>\n  );\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getJson } from './store/action/json';\n\nimport Routes from './Routes';\nimport Loading from './views/common/Loading';\nimport Error from './views/error/Error';\nimport ApiKey from './views/ApiKey/ApiKey';\n\nimport './App.scss';\nexport default function App() {\n  const dispatch = useDispatch();\n  const dragonJson = useSelector(({ json }) => json);\n  const apiKey = useSelector(({ apiKey: { key } }) => {\n    return key;\n  });\n  const [hasJson, setHasJson] = useState('init');\n  const [hasKey, setHasKey] = useState('');\n  useEffect(() => {\n    for (const key in dragonJson) {\n      if (!dragonJson[key]) {\n        (async () => {\n          try {\n            setHasJson('loading');\n            await dispatch(getJson());\n            setHasJson('complete');\n          } catch (err) {\n            setHasJson('error');\n          }\n        })();\n      }\n    }\n  }, [dragonJson, dispatch]);\n\n  useEffect(() => {\n    setHasKey(apiKey);\n  }, [apiKey]);\n  if (hasKey === '') {\n    return <ApiKey />;\n  }\n  switch (hasJson) {\n    case 'loading':\n      return <Loading />;\n    case 'error':\n      return <Error text={\"can't get dragonJson data\"} />;\n    case 'complete':\n      return <Routes />;\n    default:\n      return <Error text={\"can't get dragonJson data\"} />;\n  }\n}\n","import dragonJsonTypes from 'fixture/dragonJsonTypes';\n\nexport function setJson(jsonData) {\n  return {\n    type: `setJson`,\n    payload: jsonData,\n  };\n}\n\nexport function getJson() {\n  return async (dispatch) => {\n    try {\n      const promises = [];\n      dragonJsonTypes.forEach((val) => {\n        promises.push(fetchJsonUrl(val));\n      });\n      const result = await Promise.all(promises);\n      dispatch(setJson(result));\n    } catch (err) {\n      throw new Error(err);\n    }\n  };\n}\n\nfunction fetchJsonUrl(type) {\n  return new Promise(async (resolve, reject) => {\n    const res = await fetch(\n      `https://ddragon.leagueoflegends.com/cdn/11.4.1/data/en_US/${type}.json`,\n    );\n    if (!res.ok) {\n      reject(res.status);\n    } else {\n      resolve(res.json());\n    }\n  });\n}\n\n//TODO: 어떻게 Body.json()을 테스트 할 수 있는지 모르겠어서 test case를 만들지 못함\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import dragonJsonTypes from 'fixture/dragonJsonTypes';\n\nconst initJson = {};\ndragonJsonTypes.forEach((val) => {\n  initJson[val] = false;\n});\n\nexport default function reducer(state = initJson, action) {\n  const { type, payload } = action;\n  if (type === 'setJson') {\n    dragonJsonTypes.forEach((val, index) => {\n      state[val] = payload[index];\n    });\n    return state;\n  }\n  return state;\n}\n","import dragonJsonTypes from 'fixture/dragonJsonTypes';\n\nconst init = { key: '' };\n\nexport default function reducer(state = init, action) {\n  const { type, payload } = action;\n  if (type === 'setApiKey') {\n    state.key = payload;\n    return state;\n  }\n  return state;\n}\n","import { combineReducers } from 'redux';\nimport json from './json';\nimport apiKey from './apiKey';\n\nconst rootReducer = combineReducers({\n  apiKey,\n  json,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\n\nimport thunk from 'redux-thunk';\n\nimport reducer from './reducer';\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\n\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}